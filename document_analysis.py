# Generated by https://quicktype.io
#
# To change quicktype's target language, run command:
#
#   "Set quicktype target language"

from typing import List, Any
from datetime import datetime


class Span:
    offset: int
    length: int

    def __init__(self, offset: int, length: int) -> None:
        self.offset = offset
        self.length = length


class Line:
    content: str
    polygon: List[float]
    spans: List[Span]

    def __init__(self, content: str, polygon: List[float], spans: List[Span]) -> None:
        self.content = content
        self.polygon = polygon
        self.spans = spans


class Word:
    content: str
    polygon: List[float]
    confidence: float
    span: Span

    def __init__(self, content: str, polygon: List[float], confidence: float, span: Span) -> None:
        self.content = content
        self.polygon = polygon
        self.confidence = confidence
        self.span = span


class Page:
    pageNumber: int
    angle: int
    width: float
    height: float
    unit: str
    words: List[Word]
    lines: List[Line]
    spans: List[Span]

    def __init__(self, page_number: int, angle: int, width: float, height: float, unit: str, words: List[Word], lines: List[Line], spans: List[Span]) -> None:
        self.pageNumber = page_number
        self.angle = angle
        self.width = width
        self.height = height
        self.unit = unit
        self.words = words
        self.lines = lines
        self.spans = spans


class BoundingRegion:
    pageNumber: int
    polygon: List[float]

    def __init__(self, page_number: int, polygon: List[float]) -> None:
        self.pageNumber = page_number
        self.polygon = polygon


class Paragraph:
    spans: List[Span]
    boundingRegions: List[BoundingRegion]
    content: str

    def __init__(self, spans: List[Span], bounding_regions: List[BoundingRegion], content: str) -> None:
        self.spans = spans
        self.boundingRegions = bounding_regions
        self.content = content


class AnalyzeResult:
    apiVersion: str
    modelId: str
    stringIndexType: str
    content: str
    pages: List[Page]
    paragraphs: List[Paragraph]
    styles: List[Any]
    contentFormat: str

    def __init__(self, api_version: str, model_id: str, string_index_type: str, content: str, pages: List[Page], paragraphs: List[Paragraph], styles: List[Any], content_format: str) -> None:
        self.apiVersion = api_version
        self.modelId = model_id
        self.stringIndexType = string_index_type
        self.content = content
        self.pages = pages
        self.paragraphs = paragraphs
        self.styles = styles
        self.contentFormat = content_format


class JudgeDecision2116278PDF:
    status: str
    createdDateTime: datetime
    lastUpdatedDateTime: datetime
    analyzeResult: AnalyzeResult

    def __init__(self, obj):
        self.status = obj['status']
        self.createdDateTime = obj['createdDateTime']
        self.lastUpdatedDateTime = obj['lastUpdatedDateTime']
        self.analyzeResult = obj['analyzeResult']

    # def __init__(self, status: str, createdDateTime: datetime, lastUpdatedDateTime: datetime, analyzeResult: AnalyzeResult) -> None:
    #     self.status = status
    #     self.createdDateTime = createdDateTime
    #     self.lastUpdatedDate_time = lastUpdatedDateTime
    #     self.analyzeResult = analyze_result
